name: Deploy with Helm

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: portfolio-app
  EKS_CLUSTER_NAME: portfolio-cluster

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::537124942860:role/github-actions-role
        aws-region: us-west-1
        audience: sts.amazonaws.com
        role-session-name: GitHubActions

    - name: Verify AWS Authentication
      run: |
        echo "Verifying AWS Authentication..."
        aws sts get-caller-identity
        aws eks list-clusters

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Update kube config with extra verbosity
      run: |
        echo "Updating kubeconfig with verbose output..."
        aws --debug eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region us-west-1
        
        echo "Verifying kubeconfig contents..."
        cat ~/.kube/config | grep -v -E '(certificate-authority-data|client-certificate-data|client-key-data)'
        
        echo "Checking cluster access..."
        kubectl config get-contexts
        kubectl auth can-i list pods || echo "Can't list pods, insufficient permissions"

    - name: Debug Environment
      run: |
        echo "Using EKS Cluster: ${{ env.EKS_CLUSTER_NAME }}"
        echo "AWS Region: ${{ env.AWS_REGION }}"
        echo "Current directory: $(pwd)"
        ls -la ./kubernetes/helm/app || echo "Helm chart directory not found"
        
    - name: Install/Upgrade Helm Deployment
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Debug information
        echo "Using ECR Registry: $ECR_REGISTRY"
        echo "Using Image Tag: $IMAGE_TAG"
        echo "Using release name: portfolio-app"
        
        # Use Helm to deploy the application
        helm upgrade --install portfolio-app ./kubernetes/helm/app \
          --set image.repository=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }} \
          --set image.tag=$IMAGE_TAG \
          --namespace prod \
          --create-namespace
          
        # Only continue with verification if deployment succeeds
        if [ $? -eq 0 ]; then
          # Wait and verify deployment
          kubectl rollout status deployment/portfolio-app -n prod --timeout=5m
          kubectl get all -n prod
        fi
        
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() && env.SLACK_WEBHOOK_URL != ''